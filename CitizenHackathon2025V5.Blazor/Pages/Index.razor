@page "/"
@using CitizenHackathon2025V5.Blazor.Client.DTOs
@using CitizenHackathon2025V5.Blazor.Client.Services
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject Blazored.Toast.Services.IToastService ToastService
@inject IJSRuntime JS

@* <button class="btn btn-primary" @onclick="() => ToastService.ShowSuccess(" It works !", "Success" )">
    Test the toast
</button> *@

<PageTitle>OutZen - Home</PageTitle>

<div class="page-list">
    <h1 class="index-title">Welcome to OutZen application</h1>

    <div class="earth-container scroll-fade">
        <canvas id="rotatingEarth" width="450" height="450"></canvas>
        <div class="earth-controls">
            <label for="speedRange">Rotation Speed:</label>
            <input type="range" id="speedRange" min="0" max="0.20" step="0.001" value="0.01" />
        </div>
    </div>

    <p class="index-subtitle">
        Explore events with peace of mind, even when the crowds get involved.
    </p>

    <button class="index-cta" @onclick="ScrollToSuggestions">
        Discover the suggestions
    </button>

    <section class="index-section scroll-fade" id="suggestions">
        <h2>Suggestions Zen</h2>
        <p>
            Here are some alternatives within a 25 km radius of the selected event:
        </p>

        <ul>
            <li>?? Upper Sambre Natural Park</li>
            <li>?? Outdoor yoga classes in Gosselies</li>
            <li>?? Open-air theater – La Traviata</li>
        </ul>
    </section>

    <footer class="index-footer">
        &copy; 2025 OutZen – Zen in the crowd, Zen in life.
    </footer>
</div>

@code {
    #nullable disable
    private List<ClientTrafficConditionDTO> TrafficConditionsList = new();
    [Inject] public TrafficConditionService TrafficService { get; set; }

    private async Task ScrollToSuggestions()
    {
        await JS.InvokeVoidAsync("document.getElementById('suggestions').scrollIntoView", new { behavior = "smooth" });
    }

    protected override async Task OnInitializedAsync()
    {
        var rawTraffic = await TrafficService.GetLatestTrafficConditionAsync();
        TrafficConditionsList = rawTraffic
            .Where(t => t is not null)
            .Select(t => t!)
            .ToList();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initEarth", new
            {
                fallbackLat = 48.8566,
                fallbackLon = 2.3522,
                dayUrl = "/images/earth_texture.jpg",
                nightUrl = "/images/earth_texture_night.jpg"
            });
            await JS.InvokeVoidAsync("initScrollFade");
            await JS.InvokeVoidAsync("trafficInterop.updateTrafficMarkers", TrafficConditionsList);
        }
    }
}


































































@* // Copyrigtht (c) 2025 Citizen Hackathon https://github.com/POLLESSI/Citizenhackathon2025V5.Blazor.Client. All rights reserved. *@




