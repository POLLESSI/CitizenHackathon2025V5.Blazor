@page "/crowd-signalr"
@using CitizenHackathon2025V5.Blazor.Client.DTOs
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>?? Crowd SignalR Test</h3>

<button @onclick="SendTestUpdate">Envoyer un test serveur</button>

@code {
    private HubConnection? _hubConnection;

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7254" + CrowdHubRoutes.Path) // hub serveur
            .WithAutomaticReconnect()
            .Build();

        _hubConnection.On<ClientCrowdInfoDTO>(CrowdHubMethods.ReceiveCrowdUpdate, async crowd =>
         {
            Console.WriteLine($"?? Update Crowd received: {crowd.LocationName} ({crowd.CrowdLevel})");
            await JS.InvokeVoidAsync("window.OutZenInterop.addOrUpdateCrowdMarker",
            crowd.Id.ToString(),
            crowd.Latitude,
            crowd.Longitude,
            crowd.CrowdLevel,
            new { title = crowd.LocationName, description = $"Maj {crowd.Timestamp}" }
            );
        });


        await _hubConnection.StartAsync();
        Console.WriteLine("? Connected hub");
    }

    private async Task SendTestUpdate()
    {
        if (_hubConnection is not null)
        {
            // Calls the method exposed by the server-side hub
            await _hubConnection.InvokeAsync("RefreshCrowd", "manual-test");
        }
    }

}











































































@* // Copyrigtht (c) 2025 Citizen Hackathon https://github.com/POLLESSI/Citizenhackathon2025V5.Blazor.Client. All rights reserved. *@




