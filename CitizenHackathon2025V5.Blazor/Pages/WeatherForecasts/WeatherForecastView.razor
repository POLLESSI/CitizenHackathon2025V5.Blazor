@page "/weatherforecastview"
@using CitizenHackathon2025V5.Blazor.Client.Models
@using CitizenHackathon2025.Blazor.DTOs
@using CitizenHackathon2025V5.Blazor.Client.Constants
@using CitizenHackathon2025V5.Blazor.Client.DTOs
@inject IJSRuntime js

<span class="fas fa-certificate me-2"></span> WeatherForecasts

<div class="page-list">
    <h3>Weather Forecasts List</h3>
    <div class="list-toolbar">
        <div class="left">
            <input class="input-compact" placeholder="Search weather..."
                   @bind="_q" @bind:event="oninput" />
            @if (!string.IsNullOrWhiteSpace(_q))
            {
                <span class="badge badge-info">“@_q”</span>
            }
        </div>

        <div class="right">
            <button class="chip @( _onlyRecent ? "active" : null )"@onclick="() => ToggleRecent()">Recent</button>
        </div>
        <div>
            <NavLink class="chip add-chip" href="/weatherforecastcreate">
                Add
            </NavLink>
        </div>
    </div>
        <div class="table-wrapper draggable-container"
                @ref="ScrollContainerRef"
                @onscroll="HandleScroll"
                style="height: 300px; overflow-y: auto; border: 1px solid #444;">
            <table class="table table-striped table-dark styled-table data-list">
                <thead>
                    <tr>
                        <th>#</th>
                        <th class="col-narrow">TemperatureC</th>
                        <th class="col-narrow">TemperatureC</th>
                        <th class="col-narrow">Summary</th>
                        <th class="col-actions"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (!FilterWeather(visibleWeatherForecasts).Any())
                    {
                      <tr><td colspan="99"><div class="empty-state">No weather forecast available at the moment.</div></td></tr>
                    }
                    else
                    {
                    @foreach (var we in FilterWeather(visibleWeatherForecasts))
                        {
                            <tr>
                                <td>•</td>
                                <td>@we.TemperatureC</td>
                                <td>@we.TemperatureC</td>
                                <td>@we.Summary</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-info" @onclick="() => ClickInfo(we.Id)">Info</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
</div>

<button class="btn btn-primary" @onclick="GenerateOne">Générer une prévision</button>
           
@if (SelectedId > 0)
{
    <div class="detail-wrapper">
        <div class="list-toolbar">
            <div class="left"><span class="badge badge-info">Details #@SelectedId</span></div>
            <div class="right">
                <button class="chip" @onclick="() => SelectedId = 0">Closed</button>
            </div>
        </div>
        <WeatherForecastDetail Id="@SelectedId" />
    </div>
}
@if (!FilterWeather(visibleWeatherForecasts).Any())
{
    <div class="oz-empty">No items for these filters.</div>
}

@code {
    private async Task GenerateOne()
    {
        var dto = await WeatherForecastService.GenerateNewForecastAsync();
        if (dto is not null)
        {
            allWeatherForecasts.Insert(0, dto);
            visibleWeatherForecasts.Insert(0, dto);
            StateHasChanged();
        }
    }
}























































































@* // Copyrigtht (c) 2025 Citizen Hackathon https://github.com/POLLESSI/Citizenhackathon2025V5.Blazor.Client. All rights reserved. *@




